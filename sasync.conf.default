#!/usr/bin/env bash
<<<<<<< HEAD
# Double check that these flags point to your files/folders
SASDIR="/opt/sasync"              # Location of the sasync script
SETDIR="$SASDIR/sasets"           # Location of your set files
JSDIR="/opt/sa"                   # Location of DIR with SA .json files. No trailing slash
MINJS=1                           # First json file number in your JSON directory (JSDIR)
MAXJS=1200                        # Hughest/max json file number in your JSON directory (JSDIR)
JSCOUNT="$SASDIR/json.count"      # Location of json.count file (NOT the jsons themselves)
FILTER="$SASDIR/filter"           # Location of your default filter file
IFS1=' ,|'                        # Field separator for set file. Use ',' or '|' if you do not use space
=======
SASYNC_DIR=/opt/sasync
SET_DIR=$SASYNC_DIR/sasets                 # Location of sasync set.* files
JSON_DIR=/opt/sa                           # Location of DIR with service account .json files. No trailing slash
JSON_COUNT=$SASYNC_DIR/json.count          # Location of json.count file
MIN_JSON=1
MAX_JSON=1200                              # CHANGE `MAX_JSON` TO THE MAX JSON FILE # IN JSON_DIR
TIMEOUT=30m                                # Timeout bypasses rclone hangs. Set to 2h (2 hours) or 1d (1 day) if not needed
TIMEOUT_SWEEP=90m                          # Allow longer timeout for sweeper. Disable move,copy is slower than server-side
CLEAN_DEST=TRUE
CLEAN_SRC=FALSE
PRE_CLEAN_TDS=FALSE                        # If you want to clean the TDs before running rclone w SAs then change this to TRUE
SWEEP=FALSE                                # To copy files that won't copy server-side set SWEEP=TRUE. Otherwise leave as FALSE
FILTER="--filter-from="$SASYNC_DIR/filter
DMC=""
GLOBAL_FLAGS="
    --tpslimit=5
    --tpslimit-burst=50
    --transfers=10
    --fast-list
    -vP
    --size-only
    --stats=5s
    --max-backlog=2000000
    --stats-file-name-length=128
    --ignore-case
    --drive-chunk-size=128M
    --drive-use-trash=false
    --drive-server-side-across-configs=true
    "
#   Please LEAVE SPACES AND QUOTATION MARKS ABOVE to allow rclone to interpret the flags
#   Add or remove flags as needed. Flags in set files (if any) will override global flags
>>>>>>> f8ff717c5fbc01f5743632f978a66b87eb3f476a

# Flags to control which checks and what cleaning is done. All = false works in standard case
CHECK_REMOTES=true                # Check if remotes are configured in rclone. Faster if set to false
CALC_SIZE=false                   # Runs check size and estimates number of SAs required
FILE_COMPARE=false                # Runs hash check against files
CLEAN_DEST=false                  # Set to true if you want to clean the destination
CLEAN_SRC=false                   # Set to true if you want to clean the source
PRE_CLEAN_TDS=false               # Set to true to clean remotes fore running rclone
TMOUT=""                          # Syntax is TMOUT="timeout 30m". Use only if rclone hangs
EXIT_ON_BAD_PAIR=false            # Exit (true) or continue (false) if set pair is bad
SRC_LIMIT=                        # Daily limit in GB. Blank if none. To use, CALC_SIZE must be true
BAK_FILES=false                   # (true/false)Send files to backup dir rather than delete them
BAK_DIR=backup                    # Backup files sent to destination/BAK_FILE_DIR

# These flags are applied to all sets. Tweak them as you like
FLAGS="
  --fast-list
  -vP
  --stats=5s
  --max-backlog=2000000
  --ignore-case
  --no-update-modtime
  --drive-chunk-size=128M
  --drive-use-trash=false
  --filter-from=$FILTER
  --track-renames
  --use-mmap
  --drive-server-side-across-configs=true
  "
