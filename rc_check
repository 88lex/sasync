#!/usr/bin/env bash

# Setting temp variables
COUNT=$(<$JSON_COUNT);EXCODE=8;SRC_SAS="true";maxt1="--max-transfer $maxt"
dest1="${dest%:*}";DEST1="${dest1^^}";DEST1="${DEST1//-/_}"
src1="${src%:*}";SRC1="${src1^^}";SRC1="${SRC1//-/_}"

if [ ${CHECK_REMOTES,,} = "true" ];then . msg ck_rem
  if ! rclone config show $src1 &>/dev/null;then . msg rc_bad $src;$CON_EX;fi
  if ! rclone config show $dest1 &>/dev/null;then . msg rc_bad $dest;$CON_EX;fi

  if ! rclone lsd $src &>/dev/null;then . msg fail_rem $src;$CON_EX;fi
  if ! rclone lsd $dest &>/dev/null;then . msg fail_rem $dest;$CON_EX;fi

  if [ "$(rclone config show $src1 | grep team_drive | wc -m)" -gt 15 ]
    then . msg ok_td $src1;else . msg not_td $src1;fi

  if [ "$(rclone config show $dest1 | grep team_drive | wc -m)" -gt 15 ]
    then . msg ok_td $dest1;else . msg not_td $dest1;fi

  if rclone lsd $dest --drive-service-account-file="$JSON_DIR/$COUNT.json" &>/dev/null
    then . msg ok_sa $dest;else . msg no_sa $dest;fi

  if rclone lsd $src --drive-service-account-file="$JSON_DIR/$COUNT.json" &>/dev/null
    then . msg ok_sa $src;else . msg no_sa $src;SRC_SAS="false";fi
fi

if [ ${PRE_CLEAN_TDS,,} = "true" ];then source clean_tds;fi

SAs=$MAX_JSON;if [ ${CALC_SIZE,,} = "true" ]
  then source sacalc && [ $srcsize == $destsize ] && . msg skip2next && continue;fi

[ ${FILE_COMPARE,,} = "true" ] && { echo -e "\nComparing files in $src and $dest\n"
  if rclone check $src $dest --one-way --fast-list &> >(grep '0 differences')
  then . msg skip2next;continue;fi; }

. msg ck_fin
