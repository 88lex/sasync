#!/usr/bin/env bash
echo -e "STARTING SASYNC v2.0\n"
set_file=$1;echo "Set file = $set_file";shift;flags=$@
source sasync.conf

rotate_sas () {
  COUNT=$(<$JSON_COUNT);echo $(( $COUNT>=$MAX_JSON?$MIN_JSON:$COUNT+1 ))>$JSON_COUNT
  echo -e "BEGIN $sync of $src to $dest w $COUNT/$MAX_JSON.json from $set_file\n"
  echo -e "GLOBAL FLAGS=$G_FLAGS\nSET FLAGS=$set_flags\nFILTER=$FILTER\nTIMEOUT=$TIMEOUT\n"
  SRC1="${src^^}" ; SRC1="${SRC1%:*}";DEST1="${dest^^}" ; DEST1="${DEST1%:*}"
  if [ $SRC_SAS == "true" ];then export "RCLONE_CONFIG_"$SRC1"_SERVICE_ACCOUNT_FILE="$JSON_DIR"/"$COUNT.json;fi
  export "RCLONE_CONFIG_"$DEST1"_SERVICE_ACCOUNT_FILE="$JSON_DIR"/"$COUNT.json
}
run_rclone_w_flags () {
  rotate_sas
  $TIMEOUT rclone $sync $src $dest $maxtrans $G_FLAGS $set_flags $FILTER
  exitcode=$?;echo EXIT CODE = $exitcode
  echo -e "FINISHED $sync from $src to $dest wJSON $COUNT.json\n"
}
process_pairs () {
  column -t $SET_DIR/$set_file|tee /dev/tty|sed '/^\s*#.*$/d'|\
  while IFS=' ' read -r sync src dest maxtrans set_flags;do exitcode=8
    set_flags="$set_flags $flags";maxtrans="--max-transfer=$maxtrans"
    source sasync.conf
    source rc_check
    while [ "$exitcode" -ne "0" ];do run_rclone_w_flags;done
    #source sacalc
    #for SA in $(seq $SAs);do run_rclone_w_flags;done
    source clean_tds
  done > >(tee "logs/stdout_$set_file.log") 2> >(tee "logs/stderr_$set_file.log" >&2)
}
process_pairs $@
echo -e "\nSASYNC COMPLETED and EXITING\n"
