#!/usr/bin/env bash
<<<<<<< HEAD

export_js ()
{ export "RCLONE_CONFIG_"$1"_SERVICE_ACCOUNT_FILE="$JSDIR"/"$COUNT.json; }

next_sa ()
{ COUNT=$(<$JSCOUNT)
  echo $(( $COUNT>=$MAXJS?$MINJS:$COUNT+1 ))>$JSCOUNT
  [ -f "$JSDIR"/"$COUNT".json ] || next_sa
  if $SRC_SAS && $DEST_SAS && $CRYPT;then sa_flag="$dsaf=$JSDIR/$COUNT.json "
  else
    if $SRC_SAS;then export_js "$SRC";fi
    if $DEST_SAS;then export_js "$DEST";else SAs=1;fi
  fi; ((SAs--)); }

run_rclone_w_flags ()
{ while [[ $ret =~ ^(7|8)$ ]] && (($SAs));do . msg run_rc
    next_sa
    set -x;$TMOUT rclone $sync "$src" "$dest" $sa_flag $FLAGS\
    $set_flags $maxt_flag $bak $cmd_flags;ret=$?;set +x;done; }

run_pairs ()
{ while IFS=$IFS1 read -r sync src dest maxt set_flags;do
    . rccheck || continue
    run_rclone_w_flags
    . msg fin_sync
    . cleantds
  done <<<"$set_clean" > >(tee "$STD_LOG") 2> >(tee "$ERR_LOG" >&2); }

. sainit $@
run_pairs && . msg complete
=======
echo ; echo STARTING SASYNC v1.1 ; echo
source sasync.conf
run_rclone_w_flags () {
  COUNT=$(<$JSON_COUNT);echo $(( $COUNT>=$MAX_JSON?$MIN_JSON:$COUNT+1 ))>$JSON_COUNT
  echo BEGIN $sync of $src to $dest w $COUNT/$MAX_JSON.json from $set_file
  echo GLOBAL FLAGS = "$GLOBAL_FLAGS";echo SET FILE FLAGS = $set_flags
  echo FILTER = $FILTER  DMC = $DMC  TIMEOUT = $TIMEOUT
  timeout $TIMEOUT rclone $sync $src $dest --max-transfer=$maxtrans $GLOBAL_FLAGS\
  --drive-service-account-file="$JSON_DIR/$COUNT.json" $set_flags $DMC $FILTER
  echo;echo FINISHED $sync from $src to $dest wJSON $COUNT.json;echo
}
process_sets () {
  for set_file in $@; do echo Set file is $set_file
    column -t $SET_DIR/$set_file|tee /dev/tty|sed '/^\s*#.*$/d'|\
    while IFS=' ' read -r sync src dest maxtrans set_flags;do
      source sacalc
      for SA in $(seq $SAs);do source sasync.conf;run_rclone_w_flags;done
      source sweeper
      source clean_tds
    done
  done
}
process_sets $@ > >(tee "logs/stdout_$@.log") 2> >(tee "logs/stderr_$@.log" >&2)
echo ; echo SASYNC COMPLETED and EXITING ; echo
>>>>>>> f8ff717c5fbc01f5743632f978a66b87eb3f476a
