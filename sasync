#!/usr/bin/env bash
[ "$1"="-c" ]&&{ CFILE=$2;shift 2; }
set_file=$1;shift;cmd_flags=$@
. msg start
sleep 2s
. ${CFILE:-sasync.conf}
sleep 2s
. sainit

sleep 5s

next_json () {
  COUNT=$(<$JSCOUNT);echo $(( $COUNT>=$MAXJS?$MINJS:$COUNT+1 ))>$JSCOUNT
  [ $SRC_SAS = "true" ]&&export "RCLONE_CONFIG_"$SRC1"_SERVICE_ACCOUNT_FILE="$JSDIR"/"$COUNT.json
  export "RCLONE_CONFIG_"$DEST1"_SERVICE_ACCOUNT_FILE="$JSDIR"/"$COUNT.json
}

run_rclone_w_flags () {
  next_json;. msg run_rc;set -x
  $TMOUT rclone $sync $src $dest $FLAGS $set_flags $maxt1 $cmd_flags;EXCODE=$?;set +x
}

run_pairs () {
  while IFS=' ' read -r sync src dest maxt set_flags;do
    . rccheck;EXCODE=8
    while [[ "$EXCODE" =~ ^(7|8)$ ]] && (($SAs));do ((SAs--));run_rclone_w_flags;done
    . msg fin_sync;. cleantds
  done <<<"$set_clean" > >(tee "$STD_LOG") 2> >(tee "$ERR_LOG" >&2)
  }

run_pairs $@
. msg complete
