#!/usr/bin/env bash
echo -e "STARTING SASYNC v2.0\n";set_file=$1;shift;flags=$@
source sasync.init

run_rclone_w_flags () {
  COUNT=$(<$JSON_COUNT);echo $(( $COUNT>=$MAX_JSON?$MIN_JSON:$COUNT+1 ))>$JSON_COUNT
  echo -e "BEGIN $sync of $src to $dest w $COUNT/$MAX_JSON.json from $set_file\n"
  echo -e "FLAGS=$FLAGS\nFILTER=$FILTER\nTIMEOUT=$TIMEOUT\n"
  $SRC_SAS && export "RCLONE_CONFIG_"$SRC1"_SERVICE_ACCOUNT_FILE="$JSON_DIR"/"$COUNT.json
  export "RCLONE_CONFIG_"$DEST1"_SERVICE_ACCOUNT_FILE="$JSON_DIR"/"$COUNT.json
  set -x;rclone $sync $src $dest $FLAGS $FILTER;EXITCODE=$?;set +x
}
process_pairs () {
  column -t $SET_DIR/$set_file|tee /dev/tty|sed '/^\s*#.*$/d'|\
  while IFS=' ' read -r sync src dest maxtrans set_flags;do
    source sasync.conf
    source rc_check
    while [[ "$EXITCODE" =~ ^(5|6|7|8)$ ]] && (($SAs));do ((SAs--));run_rclone_w_flags;done
    source clean_tds
  done > >(tee "logs/stdout_$set_file.log") 2> >(tee "logs/stderr_$set_file.log" >&2)
}
process_pairs $@
echo -e "\nSASYNC COMPLETED and EXITING\n"
