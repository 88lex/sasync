# sacalc
echo;echo == CHECKING SIZE of $src and $dest ==;echo BE PATIENT, LARGE REMOTES TAKE TIME

rclone_remote_check () {
  rclone lsd $1 > /dev/null 2>&1
  [ $? = 0 ] || \
  { echo;echo REMOTE $1 in $(basename $set_file) FAILED.
  echo == CHECK set file and rclone.conf ==;echo;exit; } }

rclone_remote_check $src
rclone_remote_check $dest

let srcsize=`rclone size $src --json | cut -d ":" -f3 | cut -d "}" -f1`
let srcsizeGB=$(( $srcsize/1024**3 ))
let destsize=`rclone size $dest --json | cut -d ":" -f3 | cut -d "}" -f1`
let destsizeGB=$(( $destsize/1024**3 ))
let srcdestdiff=$(( $srcsize<$destsize?0:$srcsize - $destsize ))
let srcdestdiffGB=$(( $srcdestdiff/1024**3 ))
let maxtrans00=$( echo $maxtrans | cut -d "G" -f1 )*1024**3
let maxtransGB=$( echo $maxtrans | cut -d "G" -f1 )
let SAs=$(( ($srcdestdiffGB+$maxtransGB-1) / $maxtransGB ))

echo SOURCE $src size is $srcsizeGB GB;echo DEST $dest size is $destsizeGB GB
echo DIFF of $srcdestdiffGB GB requires $SAs SAs w maxtransfer= $maxtrans
